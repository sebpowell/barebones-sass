$theme: (
	colours: (
		brand: (
			primary: #157afb,
			secondary: #fe5607
		),

		secondary: (
			orange: #f8b000,
		),

		greyscale: (
			50: #FAFAFA,
			100: #F5F5F5,
			200: #EEEEEE,
			300: #E0E0E0,
			400: #BDBDBD,
			500: #9E9E9E,
			600: #757575,
			700: #616161,
			800: #424242,
			900: #212121
		),

		info: (
			error: #F86464,
			base: #ECDF9A,
			dark: #8C7A1B,
		),

		keyline: (
			light: #ECECEC,
			medium: #D5D5D5,
			dark: #D9D9D8,
		)
	),

	fonts: (

		sizes: (
			x-small: 12px,
			small: 14px,
			base:  16px,
			medium: 18px,
			medium-large: 24px,
			large: 32px,
			x-large: 42px,
			xx-large: 68px,
		),


		primarynew: (
			name: #{'Open Sans', sans-serif},
			weights: (
				light: 100,
				regular: 400,
				semi-bold: 600,
				bold: 700
			),
		),

		secondarynew: (
			name: #{'Futura PT', sans-serif},
			weights: (
				light: 100,
				regular: 400,
				bold: 700
			),
		),

		primary: #{'Open Sans', sans-serif},
		secondary: Helvetica,

		weights: (
			light: 100,
			regular: 400,
			bold: 700,
		)
	),

	layers: (
		backdrop: 2,
		modal: 3,
		dropdown: 1,
		navigation: 1,
	),

	sizes: (
		font-base-size: 16px,
	  quarter: 16px / 4,
	  half: 16px / 2,
	  base: 16px,
	  double-half: 16px * 1.5,
	  double: 16px * 2,
	  triple: 16px * 3,
	  quad: 16px * 4,
	),

	layout: (
		columns: 12,
		site-width: 760px,
		gutter: 1/4,
		gutter-type: padding,
		gutter-position: inside-static,
		grid-color: null,
		debug: true,
		collapse: 780px,
		mobile-padding: 24px,

		grid: (
			mobile-padding: 24px,
			columns: 12,
			gutter: 1/4,
			mobile-gutter: 24px,
			collapse: 780px
		),

		sizes: (
			font-base-size: 16px,
		  quarter: 16px / 4,
		  half: 16px / 2,
		  base: 16px,
		  double-half: 16px * 1.5,
		  double: 16px * 2,
		  triple: 16px * 3,
		  quad: 16px * 4,
		),

		breakpoints: (
			grid: 760px,
			device-x-small: 350px,
			device-small: 480px,
			device-medium: 780px,
			device-medium-large: 900px,
			device-large: 1080px,
			device-x-large: 1200px
		)
	),

	breakpoints: (

		grid: 760px,
		device-x-small: 350px,
		device-small: 480px,
		device-medium: 780px,
		device-medium-large: 900px,
		device-large: 1080px,
		device-x-large: 1200px
	)
);

@function theme($category, $value: '') {
	@return map-get(map-get($theme, $category), $value);
}

@function map-fetch($map, $keys) {
  $key: nth($keys, 1);
  $length: length($keys);
  $value: map-get($map, $key);
  @if ($length > 1) {
    $rest: ();
    @for $i from 2 through $length {
      $rest: append($rest, nth($keys, $i))
    }
    @return map-fetch($value, $rest)
  } @else {
    @return $value;
  }
}



@function colours($colour-cat, $colour) {
	// Returns each category in colours (e.g. primary)
  @return map-get(map-get(map-get($theme, colours), $colour-cat), $colour);
}

@function sizes($size) {
	// Returns each category in colours (e.g. primary)
  @return map-get(map-get($theme, sizes), $size);
}


@function themes($keys...) {


  $key: nth($keys, 1);
  $length: length($keys);
  $value: map-get($theme, $key);


  @if ($length > 1) {
    $rest: ();
    @for $i from 2 through $length {
      $rest: append($rest, nth($keys, $i))
    }
    @return map-fetch($value, $rest)
  } @else {
    @return $value;
  }

  @if map-has-key($key) {
  	@debug "Map has this key: #{$key}"
  }
}




