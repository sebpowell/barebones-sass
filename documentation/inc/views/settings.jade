extends  _inc/_layout.jade

block body
	.main-container
		h1.page-title Settings
		article.article.introduction
			p Barebones expects you to store your project settings in a SASS map (<a href="https://viget.com/extend/sass-maps-are-awesome" target="_blank">read more about SASS maps</a>). These values are used by the various helpers and mixins included in the project.

			p For example, the <span class="var">if-above()</span> mixin sources it's values from the <span class="var">$breakpoints</span> map, and text-color helper classes are generated for every color stored in the <span class="var">$colors</span> map.

			.info-panel.warning.margin-bottom-double
				p The file containing these maps is not included in the package to avoid collisions with your own settings</span>. To use Barebones, you'll need to create your own settings file, using <a href="https://github.com/sebpowell/barebones-sass/blob/master/docs/css/_settings.scss" target="_blank">this template</a>.

		article.article(id="misc")
			h2 Misc
			p Allows you to specify class prefixing (by default Barebones classes aren't namespaced) and unit type (px, rems or ems).

			

			.example
				pre.example-code
					code.language-scss.
						$misc: (
							prefix: "bb-",
							responsiveHelpers: true,
						);

		article.article(id="colors")
			h2 Colors
			p Stores your colour palette in a organised way. Access using the <span class="var">colors($category, $value)</span> function.
			.example.margin-bottom-double
				pre.example-code.border-bottom
					code.language-scss.
						$colors: (
							brand: (
								primary: #157AFB,
								secondary: #FE5607,
								...
							),
							secondary: (
								orange: #F8B000,
								...
							),
							greyscale: (
								50: #FAFAFA,
								100: #F5F5F5,
								...
							),
							keyline: (
								light: #E5E5E5,
								...
							),
						);

						// Access like this
						.element {
							background-color: colors(brand, primary);
						}

		article.article(id="fonts")
			h2 Fonts
			p Specify font familys' and their respective weights. Access using <span class="var">fonts($family)</span> and <span class="var">weights($family, $weight)</span> functions.
			.example.margin-bottom-double
				pre.example-code
					code.language-scss.
						$fonts: (
							primary: (
								family: #{"Open Sans", Helvetica, sans-serif},
								weights: (
								 light: 100,
								 regular: 200,
								 semi-bold: 500
								)
							),
							secondary: (
								family: #{"Futura PT", Helvetica, sans-serif},
								weights: (
									bold: 600,
								)
							)
						);

		article.article(id="grid")
			h2 Grid
			p Specify global grid settings. Access using <span class="var">grid($setting)</span>. Read more about the grid system and available settings <a href="grid.html">here</a>.

			.example.margin-bottom-double
				pre.example-code
					code.language-scss.
						$grid: (
							columns: 12,
							gutter: "24px",
							breakpoint: "device-medium",
							mobile-gutter: "24px",
							mobile-spacing: "24px",
						);

		article.article(id="breakpoints")
			h2 Breakpoints
			p Specify global breakpoints. It's generally best to set these as device sizes, rather than target specific devices.

			.example.margin-bottom-double
				pre.example-code
					code.language-scss.
						$breakpoints: (
							device-small: 320px,
							device-medium: 480px,
							...
						);


		article
			h2 Line Heights

		article
			h2 Shadows

		article
			h2 Weights

		article
			h2 Font Sizes


		article.article(id="sizes")
			h2 Sizes
			p Used to keep spacing consistent throughout the project. Access using <span class="var">sizes($size)</span>.

			.example
				pre.example-code.border-bottom
					code.language-scss.
						$sizes: (
							quarter: 4px,
							half: 8px,
							base: 16px,
							...
						);
				pre.example-code
					code.language-scss.
						.element {
							padding: sizes(quarter);
						}

		article.article(id="layers")
			h2 Layers
			p Stores z-indexes for different components so you can easily see the stacking order. Access using <span class="var">layers($component)</span>.

			.example
				pre.example-code.border-bottom
					code.language-scss.
						$layers: (
							modal: 5,
							backdrop: 2,
							navigation: 4,
							...
						);
				pre.example-code
					code.language-scss.
						.modal {
							z-index: layers(modal);
						}
