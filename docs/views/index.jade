include _inc/_head.jade
include _inc/_layout.jade

.iframe-container
	.main-container

		h1.page-title Getting Started

		article.article
			p.text-medium-large Barebones is a <a href="http://sass-lang.com/" target="_blank">SASS</a> boilerplate to help you build a maintanable and scalable front-end framework. It is not a fully-fledged library, but a set of tools common to all projects; a grid system, helper classes and a range of mixins, put together in a convenient package to kickstart your next project. It includes only the bare essentials – so you can spend less time overwriting and more time creating.

			h2 Why does the world need Barebones?

			p It probably doesn't, but here goes; we wanted to create a lightweight SASS library that we could share between projects – powerful enough to allow us to focus on design, and lightweight enough to stay out of our way.

			p Over time, we've learned a lot about how to structure our SASS projects in a cohesive, scalable and maintainable way. We thought other people might find this useful and decided to release our work in the public domain. My decision was to pick out the best of the techniques I’d discovered and combine them all in one place, so that every new project I work on is using the most modern technologies I know about.

			h2 Why build your own framework?

			p Existing frameworks such as Bootstrap and Foundation are great for prototyping but are typically bloated and lack flexibility (if you want to create your own theme, you're going to spend a lot of time with the !important flag – which is a great way for things to quickly become completley unmanageable).

			p Buidling your own framework puts you in the driving seat, giving you full control over how your app or website looks, without being shoe-horned into someone else's design system.

			p comes with a series of SCSS and JS files designed to start all projects at the same point, avoiding the need to rewrite code on every project.The SCSS files reset browser styles to a default point, and includes a large range of reusable mixins. allowing you to quickly get off the ground and begin coding with a grid system, and add other components and modules as required.


		article.article(id="installing")

			h2 Installing Barebones

			p If you're new to SASS, you'll first need to make sure you're able to <a href="http://sass-lang.com/install" target="_blank">compile SASS files</a>.

			h3 1. Install the package
			p Barebones is available as a Bower package. You can also download the latest release from <a href="https://github.com/sebpowell/barebones">Github</a>.

			pre
				code.language-bash
					| bower install barebones

			h3 2. Create a settings file

			p Barebones code allows you to define your own settings – just brab <a href="https://github.com/sebpowell/barebones/blob/master/docs/css/_settings.scss" target="_blank">the example file</a> </strong> and change the values to fit your needs.

			h3 3. Create your main SASS file
			p Import your newly created settings file, followed by <span class="var">_barebones.sass</span> into your main SASS file. It should look like this:

			pre
				code.language-scss
					| @import _settings.scss // Always import the settings file first
					| @import bower-components/_base.scss // Import Barebones – the path will depend on your setup.
					| // Your stuff can come here.


		article.article(id="requirements")

			h2 Requirements

			p Barebones relies heavily on SASS maps to work, so you'll need to make sure you're using SASS 3.3 or higher. Additionally, vendor prefixing mixins are not used or included as you can use the <a href="https://github.com/postcss/autoprefixer" target="_blank">autoprefixer plugin</a> to do this.

		article.article(id="support")

			h2 Support
			p If you have a question, or need help send an email to <a href="mailto:tech@getagent.co.uk">tech@getagent.co.uk</a>.If you think something is broken or can be improved, fork the repo, and submit a pull request.


		article.article(id="background")

			h2 Background Reading

			p Barebones was heavily inspired by a variety of articles. Here are some of them in case you're interested in doing some more reading.

			ul.bullet-list
				li
					a(href="http://fourkitchens.com/blog/article/you-dont-need-bootstrap" target="_blank") You Don't Need Bootstrap – Ian Carrico
				li
					a(href="https://smacss.com/" target="_blank") Scalable & Module Architecture for CSS – Jonathan Snook
				li
					a(href="https://dzone.com/articles/why-its-good-idea-roll-your" target="_blank") Why It's a Good Idea to Roll Your Own CSS Framework
				li
					a(href="http://daverupert.com/2013/04/responsive-deliverables/" target="_blank") Responsive Deliverables – Dave Rupert
				li
					a(href="http://www.sitepoint.com/managing-responsive-breakpoints-sass/" target="_blank") Managing Responsive Breakpoints with SASS – Hugo Giraudel
				li
					a(href="http://www.zell-weekeat.com/mappy-breakpoints" target="_blank") Mappy Breakpoints – Zell Liew
				li
					a(href="http://thesassway.com/beginner/how-to-structure-a-sass-project" target="_blank") How to Structure a SASS Project – John Long
				li
					a(href="http://thesassway.com/advanced/modular-css-naming-conventions" target="_blank") Modular CSS Naming Conventions – John Long
				li
					a(href="http://www.sitepoint.com/architecture-sass-project/") Architecture for a SASS Project – Hugo Giraudel

		//- article.article
		//- 	h2 Project Structure

		//- 	h3 Helpers
		//- 	table
		//- 		tr
		//- 			td Background
		//- 			td Generates background-color helpers for every colour specified in your $colours map.
		//- 		tr
		//- 			td Borders
		//- 			td Generates border helpers using the $keyline value specified in your $colours map.
		//- 		tr
		//- 			td Layout
		//- 			td Layout helpers
		//- 		tr
		//- 			td Margin & Padding
		//- 			td Generates margin and padding helpres from sizes specified in $sizes map.
		//- 		tr
		//- 			td Typography
		//- 			td Generates text sizing, colours and transform helpers from sizes and colours specified.
		//- 		tr
		//- 			td Visibility
		//- 			td Generic helpers, alongside generated helpers to target different viewports, using the $breakpoints map.

		//- 	h3 Mixins
		//- 	table
		//- 		tr
		//- 			td Arrow
		//- 			td Generates background-color helpers for every colour specified in your $colours map.
		//- 		tr
		//- 			td Clearfix
		//- 			td Generates border helpers using the $keyline value specified in your $colours map.
		//- 		tr
		//- 			td Ellipsis
		//- 			td Layout helpers
		//- 		tr
		//- 			td Media Query
		//- 			td Generates margin and padding helpres from sizes specified in $sizes map.
		//- 		tr
		//- 			td Placeholder
		//- 			td Generates text sizing, colours and transform helpers from sizes and colours specified.
		//- 		tr
		//- 			td Uppercase
		//- 			td Generic helpers, alongside generated helpers to target different viewports, using the $breakpoints map.

		//- 		tr
		//- 			td Z-Index
		//- 			td Generic helpers, alongside generated helpers to target different viewports, using the $breakpoints map.

		//- 	h3 Grid
		//- 	table
		//- 		tr
		//- 			td Columns
		//- 			td Generates background-color helpers for every colour specified in your $colours map.
		//- 		tr
		//- 			td Container
		//- 			td Generates border helpers using the $keyline value specified in your $colours map.
		//- 		tr
		//- 			td Gallery
		//- 			td Layout helpers
		//- 		tr
		//- 			td Offset Helpers
		//- 			td Generates margin and padding helpres from sizes specified in $sizes map.
		//- 		tr
		//- 			td Row
		//- 			td Generates text sizing, colours and transform helpers from sizes and colours specified.



