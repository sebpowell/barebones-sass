extends  _inc/_layout.jade

block body

	.iframe-container

		.main-container


			h1.page-title Grid
			article.article.introduction

				p Barebones includes a flexible, responsive grid system. It's a semantic grid, allowing you to target given components – for example, a sidebar – without littering your HTML with helper classes and unnecessary divs.




			article.article
				h2 Grid Settings
				p Specify your grid settings in your settings file. The following settings are available.

				table

					tr
						td columns (default: 12)
						td 12
						td Number of columns in your grid
					tr
						td breakpoint (default: device-medium – 720px)
						td The point at which all column sizes should expand to 100%.
					tr
						td gutter (default: 1/4)
						td Expressed as a calculated as a fraction of the column widthns as such: 1/8, 1/4 etc.
					tr
						td grid-type (default: margin)
						td Specify whether you want to create gutters using padding or margin.


			article.article
				h2 Columns
				p First, you'll need to create a container.
				h2 Containers

				p Containers are used to center and restrict content width on the page. They are fluid, and the width is limited using the max-width property. They also include left and right padding to give breathing room on smaller devices, using the <span class="code">mobile-padding</span> value from the settings file.
				p You can create a container using the <span class="function">container($max-width)</span> function.

				table
					tr
						td $max-width
						td container max-width
					tr
						td $mobile-gutter <em>(true false)</em>
						td removes the mobile gutter on smaller screens (for example, if you're nesting a container inside another container).

				pre
					code.language-scss.
						.element {
						  @include container(600, $mobile-gutter: false);
						 }


				pre
					code.language-scss
						| .container {
						|   @include container(1000px);
						| }

				p Use the <span class="var">span($columns, $position, $gutter)</span> function to specify column widths. To create different widths at different breakpoints, use the <span class="var">respond-above($device)</span> mixin.

				table
					tr
						td $columns
						td Number of columns the component spans, of the total number defined in your settings file.
					tr
						td $position <em>(optional)</em>
						td if the column is the last one, pass the 'last' keyword to remove the margin.
					tr
						td $gutter <em>(optional)</em>
						td You can remove the gutter by passing the keyword 'none'.


				pre
					code.language-scss.
						.sidebar {
						  @include span(4); // Creates a column that spans 4 colums
						}

						.content {
						  @include span(8, $position: last); // Creates a column that spans 8 columns
						}



				.example.margin-bottom-base
					.example-wrapper
						.example-sidebar(style="background-color: lightpink")
						.example-content-block(style="background-color: lightpink")





			article.article
				h2 Galleries
				p Galleries are made up of elements that repeat across multiple lines. Here's how you would create one.
				pre
					code.language-scss.
						.photo-gallery {
						  @include clearfix;
						  // Clears the floats.
						}

						.photo-gallery-item {
							@include gallery(3);
							// Creates a gallery with each item taking up 3 columns of your grid (on a 12 grid-layout, this would be 4 items).
						}

				.example
					.photo-gallery
						.photo-gallery-item
						.photo-gallery-item
						.photo-gallery-item
						.photo-gallery-item
						.photo-gallery-item
						.photo-gallery-item
						.photo-gallery-item
						.photo-gallery-item
						.photo-gallery-item
						.photo-gallery-item


				.example.photo-gallery
					.element(style="background-color: lightpink; height: 40px")
					.element(style="background-color: lightpink; height: 40px")
					.element(style="background-color: lightpink; height: 40px")
					.element(style="background-color: lightpink; height: 40px")
					.element(style="background-color: lightpink; height: 40px")



			article#containers.article

				h2 Helper Classes

				p Various helper classes are also generated to quickly create grids. See here for more info.













