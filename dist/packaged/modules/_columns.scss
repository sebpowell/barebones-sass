$breakpoint: map-get($grid, breakpoint);

$columns:  map-get($grid, columns);

$gutter:  map-get($grid, gutter);

// Generate column helper classes.
@for $i from 1 through $columns {
	.columns-#{$i} {
		padding: 0 $gutter / 2;

		@include if-below($breakpoint) {
			width: 100%;
			&:not(:last-of-type) {
				margin-bottom: $gutter;
			}
		}

		@include if-above($breakpoint) {
			float: left;
			width: $i * (100% / $columns);
		}
	}
}

// Generate breakpoint-specific column helper classes.
@each $key, $value in $breakpoints {
	@for $i from 1 through $columns {
		.columns-#{$i}-above-#{$key} {
			padding: 0 $gutter / 2;

			@include if-below($key) {
				&:not(:last-of-type) {
					margin-bottom: $gutter;
				}
			}

			@include if-above($key) {
				float: left;
				width: $i * (100% /  $columns);
			}
		}

		.columns-#{$i}-below-#{$key} {
			padding: 0 $gutter / 2;

			@include if-below($key) {
				&:not(:last-of-type) {
					margin-bottom: $gutter;
				}
			}

			@include if-below($key) {
				float: left;
				width: $i * (100% /  $columns);
			}
		}
	}
}

// Column container.
.columns {
	@include clearfix;
	margin-left: -( $gutter / 2);
	margin-right: -( $gutter / 2);

	&.no-gutter {
		margin-left: 0;
		margin-right: 0;
		> [class^="columns-"] {
			padding: 0;
		}
	}

	@include if-above($breakpoint) {
		&.gutter-half {
			margin-left: -($gutter / 4);
			margin-right: -($gutter / 4);
			> [class^="columns-"] {
				padding: 0 $gutter / 4;
			}
		}

		&.gutter-double {
			margin-left: -($gutter);
			margin-right: -($gutter);
			> [class^="columns-"] {
				padding: 0 $gutter;
			}
		}
	}
}