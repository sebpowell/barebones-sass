$dropdown: (
	fontSize: 12px,
	shadow: none,
	background: white,
	border-radius: 0 0 3px 3px,
	border: 1px solid colors(keyline, light),
	itemColor: red,
	hoverBackground: colors(greyscale, 50),
	tailSize: 12px,
	itemPadding: sizes(base),
	itemFontSize: 12px,
	seperator: 1px solid colors(keyline, light),
	effect: fade-in,
	openClass: "is-open",
) !default;

.dropdown-menu {
	// +transition(all, .25s)
	display: block;
	box-shadow: map-get($dropdown, shadow);
	position: absolute;
	top: 100%;
	opacity: 0;
	visibility: hidden;
	width: 240px;
	padding: 0;
	margin: 0;

	@if map-has-key($layers, dropdown-menu) {
		z-index: layers(dropdown-menu);
	}
	@else {
		z-index: 5;
	}

	&.#{map-get($dropdown, openClass)} {
		// +transform(scale(1, 1))
		.dropdown-menu-links {
			opacity: 1 !important;
			visibility: visible !important;
			// transform: translateY(1) scale(1);
		}
	}

	.dropdown-menu-links {
		// @include fadeUpScale(1s, 20px);
		padding: 0;
		margin: 0;
		opacity: 0;
		visibility: hidden;
		background: map-get($dropdown, background);
		border-radius: map-get($dropdown, border-radius);
		border: map-get($dropdown, border);
		max-height: 400px;
		overflow-y: scroll;
		width: 100%;
		> li {
			text-align: left;
			margin: 0;
			&:not(:last-child) {
				border-bottom: map-get($dropdown, seperator);
			}

			> a {
				display: block;
				color: map-get($dropdown, itemColor);
				padding: map-get($dropdown, itemPadding);
				font-size: map-get($dropdown, itemFontSize);

				&:hover {
					text-decoration: none;
					background: map-get($dropdown, hoverBackground);
					// background: colors(greyscale, x-light)
					// color: colors(greyscale, dark) !important
				}
			}
		}
	}
	// Positioning helpers.
	&.dropdown-menu-left {
		left: 0;
	}

	&.dropdown-menu-center {
		left: 50%;
		margin-left: -90px;
	}

	&.dropdown-menu-right, &.right {
		right: 0;
	}
}


