

@for $i from 1 through themes(layout, columns)
	.columns-#{$i}
		width: 100%
		float: left

		+respond-below(device-small)
			margin-bottom: themes(layout, grid, mobile-gutter)
			&:last-child
				margin-bottom: 0

		+respond-above(device-small)
			margin-right: $gutterWidth
			&:last-child
				margin-right: 0

			@if $i > 1
				width: ($i * $columnWidth) + (($i - 1) * $gutterWidth)
			@else
				width: ($i * $columnWidth)



@each $key, $value in themes(layout, breakpoints)
	@for $i from 1 through themes(layout, grid, columns)
		.columns-#{$i}-#{$key}
			width: 100%
			// margin-bottom: sizes(double)

			+respond-above($key)
				@if $i > 1
					width: ($i * $columnWidth) + (($i - 1) * $gutterWidth)
				float: left





@mixin span($columns, $device: "device-medium", $position: "")
	// margin-right: $gutterWidth;
	// @if theme(layout, gutter-type) == "padding"
	// 	$columnWidth: 100% / theme(columns)
	// 	padding-right: theme(gutter)
	// 	width: 100%
	// 	@include respond-above(device-medium)
	// 		width: ($columnWidth * $columns)

	// @if theme(layout, gutter-type) == "margin"

	// 	width: 100%

	// 	@include respond-above($device)
	// 		width: ($columnWidth * $columns) + ($gutterWidth * ($columns - 1))
	// 		@if $position == "last"
	// 			margin-right: 0
	// 			float: right

	// 		@else
	// 			float: left
	// 			margin-right: $gutterWidth

			// @if $offset != null {
			// 	margin-left: $offset;
			// }




// }

