// @mixin gallery($keys, $gutter: map-get($grid, gutter)) {
// 	$items: map-get($grid, columns) / $keys;
// 	float: left;
//
// 	@if map-get($grid, type) == "padding" {
// 		width: 100% / $items;
// 		padding: 0 $gutter / 2;
// 	}
//
// 	// @if map-get($grid, type) == "margin" {
// 	//
// 	// 	@if $gutter == 0 {
// 	// 		width: 100% / $items;
// 	// 		height: 100px;
// 	// 		background: red;
// 	// 	}
// 	//
// 	//
// 	// 	@else if $gutter <= 1 {
// 	// 		$totalGutters: ( map-get($grid, columns) / $gutter ) + ( map-get($grid, columns) - 1 );
// 	// 		$gutterWidthTest: 100% / $totalGutters;
// 	// 		$totalGutterWidth: $gutterWidthTest * ( map-get($grid, columns) - 1 );
// 	// 		$columnWidth: (100% - $totalGutterWidth) / map-get($grid, columns);
// 	// 		background: red;
// 	// 		height: 100px;
// 	// 		width: $key * $gutterWidthTest * (1 / $gutter);
// 	// 		&:not(:last-child) {
// 	// 			margin-right: $gutterWidthTest;
// 	// 		}
// 	// 	}
// 	//
// 	// 	@else {
// 	//
// 	// 		$totalGutters: map-get($grid, columns) + ($gutter * ( map-get($grid, columns) - 1) );
// 	// 		$gutterWidthTest: 100% / $totalGutters;
// 	// 		$totalGutterWidth: $gutterWidthTest * ( map-get($grid, columns) - 1 );
// 	// 		// $columnWidth: (100% - $totalGutterWidth) / map-get($grid, columns);
// 	// 		background: red;
// 	// 		height: 100px;
// 	// 		width: $gutterWidthTest;
// 	// 		&:not(:last-child) {
// 	// 			margin-right: $gutterWidthTest * $gutter;
// 	// 		}
// 	// 	}
// 	// }
// 	//
// 	//
// 	// // Remove margin-right if more than n items in container.
// 	// &:nth-of-type(#{$items}n + #{$items}) {
// 	// 	margin-right: 0;
// 	// }
// 	//
// 	// &:nth-of-type(-n+#{$items}) {
// 	// 	margin-top: 0;
// 	// }
// }
@mixin gallery($keys...) {
	$items: length($keys);
	@for $i from 1 through $items {
		> li:nth-of-type(#{$i}n) {
			$value: nth($keys, $i);
			float: left;
			width: 100% / 12 * $value;
		}
	}
}
