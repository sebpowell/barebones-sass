$grid: (
	columns: 12,
	gutter: 2,
	breakpoint: "device-medium",
) !default;


// Check number of columns, if no value, assign default value.
@if map-has-key($grid, columns) {
	$columnCount: grid(columns);
	$gutterCount: grid(columns) - 1;
}
@else {
	$columnCount: 12;
	$gutterCount: 12 - 1;
}

// Calculate total number of gutters (number of gutters in a column + the extra gutter on the right)
@if map-has-key($grid, gutter) {
	$totalGutters: $columnCount / grid(gutter) + $columnCount - 1;
}

@else {
	$totalGutters: $columnCount / 0.25 + $columnCount - 1;
}

@debug $totalGutters;

// Set width for gutters and columns.
$gutterWidth: 100% / $totalGutters;
$totalGutterWidth: $gutterWidth * $gutterCount;
$columnWidth: (100% - $totalGutterWidth) / $columnCount;

// Set global breakpoint.
@if map-has-key($grid, breakpoint) {
	$gridBreakpoint: grid(breakpoint);
}
@else {
	$gridBreakpoint: 720px;
}

@function gutterCalc($gutter) {


	$totalGutters: ($columnCount * $gutter) + ($columnCount - 1);
	@debug $totalGutters;
	$gutterWidth: 100% / $totalGutters;
	$totalGutterWidth: $gutterWidth * $gutterCount;

	@return $gutterWidth;
}

// Calculate column widths
@function columnCalc($columns, $gutter: "") {

	@if $gutter != null {
		@return $columns * $columnWidth + ($columns - 1) * $gutterWidth;
	}

	@else {
		@return $columns * $columnWidth + ($columns - 1) * $gutterWidth;
	}

}
