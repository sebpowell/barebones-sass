$bb-margin-settings-default: (
	"import": true,
	"name": "margin",
	"modifiers": (
		"top": "top", 
		"right": "right",
		"bottom": "bottom",
		"left": "left",
		"vertical": "vertical",
		"horizontal": "horizontal"
	)
);

$bb-margin-settings: () !default;

$bb-margin-settings: map-merge($bb-margin-settings-default, $bb-margin-settings);

@if (map-get($bb-margin-settings, "import") == true) {

	$className: map-get($bb-margin-settings, "name");

	$i: 1;

	@while $i <= strip-unit($bb-spacing-scale) {
		
		$n: $i * strip-unit($bb-spacing-base);	
		
		@each $key, $value in map-deep-get($bb-margin-settings, "modifiers") {
			@if $key == "vertical" {
				@include helpers("#{$className}#{$bb-global-delimiter}#{$value}#{$bb-global-delimiter}#{$i}", "margin-top: #{$n}px", "margin-bottom: #{$n}px");
			}

			@else if $key == "horizontal" {
				@include helpers("#{$className}#{$bb-global-delimiter}#{$value}#{$bb-global-delimiter}#{$i}", "margin-left: #{$n}px", "margin-right: #{$n}px");
			}

			@else {
				@include helpers("#{$className}#{$bb-global-delimiter}#{$value}#{$bb-global-delimiter}#{$i}", "margin-#{$key}: #{$n}px");
			}

			@include helpers("#{$className}#{$bb-global-delimiter}#{$i}", "margin: #{$n}px");
		}
		
		$i: $i + 1;
	}
	
	@include helpers("no-#{$className}", "margin: 0 !important");

	.no-#{$className}-last {
		&:last-of-type {
			margin: 0 !important;
		}
	}

	@include helpers("#{$className}-auto", "margin: 0 auto");
}